set(OPENAL_ROOT ${CMAKE_BINARY_DIR}/openal)
if(TARGET_WIN32)
    set(ALSOFT_STATIC_LIBGCC TRUE)
    set(ALSOFT_STATIC_STDCXX TRUE)
    set(EXTRA_LIBS ole32 shell32 user32)
else()
    set(ALSOFT_STATIC_LIBGCC FALSE)
    set(ALSOFT_STATIC_STDCXX FALSE)
endif()

# *Replicate* variables generated by `FindOpenAL`
set(OPENAL_FOUND TRUE)
set(OPENAL_COMPILING_FROM_SRC TRUE)
set(OPENAL_INCLUDE_DIR ${OPENAL_ROOT}/include/AL)
if(TARGET_WIN32)
    set(OPENAL_LIBRARY ${OPENAL_ROOT}/lib/${CMAKE_IMPORT_LIBRARY_PREFIX}OpenAL32${CMAKE_IMPORT_LIBRARY_SUFFIX})
else()
    set(OPENAL_LIBRARY ${OPENAL_ROOT}/lib/${CMAKE_SHARED_LIBRARY_PREFIX}openal${CMAKE_SHARED_LIBRARY_SUFFIX})
endif()
set(OPENAL_VERSION_STRING 1.23.1)

ExternalProject_Add(
    OPENAL
    SOURCE_DIR          ${CMAKE_SOURCE_DIR}/lib/openal
    BINARY_DIR          ${OPENAL_ROOT}
    INSTALL_DIR         ${OPENAL_ROOT}
    UPDATE_DISCONNECTED TRUE
    CMAKE_ARGS          --toolchain ${CMAKE_TOOLCHAIN_FILE}
                        --install-prefix ${OPENAL_ROOT}
                        -DCMAKE_BUILD_TYPE:STRING=Release
                        -DCMAKE_OSX_ARCHITECTURES=${CMAKE_OSX_ARCHITECTURES}
                        -DALSOFT_UTILS:BOOL=FALSE
                        -DALSOFT_NO_CONFIG_UTIL:BOOL=TRUE
                        -DALSOFT_EXAMPLES:BOOL=FALSE
                        -DALSOFT_INSTALL_CONFIG:BOOL=FALSE
                        -DALSOFT_INSTALL_HRTF_DATA:BOOL=FALSE
                        -DALSOFT_INSTALL_AMBDEC_PRESETS:BOOL=FALSE
                        -DALSOFT_INSTALL_EXAMPLES:BOOL=FALSE
                        -DALSOFT_INSTALL_UTILS:BOOL=FALSE
                        -DALSOFT_UPDATE_BUILD_VERSION:BOOL=TRUE
                        -DALSOFT_STATIC_LIBGCC:BOOL=${ALSOFT_STATIC_LIBGCC}
                        -DALSOFT_STATIC_STDCXX:BOOL=${ALSOFT_STATIC_STDCXX}
                        -DCMAKE_POLICY_VERSION_MINIMUM=3.5
    CMAKE_CACHE_ARGS    -DEXTRA_LIBS:STRINGS=${EXTRA_LIBS}
    BUILD_BYPRODUCTS    ${OPENAL_LIBRARY}
)

# OpenAL targets
if(NOT TARGET OpenAL::OpenAL)
    add_library(OpenAL::OpenAL SHARED IMPORTED)
endif()
add_dependencies(OpenAL::OpenAL OPENAL)
file(MAKE_DIRECTORY ${OPENAL_INCLUDE_DIR})
set_target_properties(
    OpenAL::OpenAL PROPERTIES
    IMPORTED_LOCATION ${OPENAL_LIBRARY}
    IMPORTED_IMPLIB ${OPENAL_LIBRARY}
)
target_include_directories(OpenAL::OpenAL INTERFACE ${OPENAL_INCLUDE_DIR})
target_link_directories(OpenAL::OpenAL INTERFACE ${OPENAL_ROOT}/lib)

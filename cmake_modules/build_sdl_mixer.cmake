set(SDL_MIXER_ROOT ${CMAKE_BINARY_DIR}/SDL_mixer)
set(SDL_ROOT ${CMAKE_BINARY_DIR}/SDL)
set(SDL2_INCLUDE_DIR ${CMAKE_BINARY_DIR}/SDL/include/SDL2)

if(PLAT_MINGW_X86_64)
    set(SDL_MIXER_C_FLAGS "-fno-stack-protector")
    set(SDL_MIXER_CXX_FLAGS "-fno-stack-protector")
else()
    set(SDL_MIXER_C_FLAGS "")
    set(SDL_MIXER_CXX_FLAGS "")
endif()

# *Replicate* variables generated by `FindSDL_mixer`
set(SDL_MIXER_FOUND TRUE)
set(SDL_MIXER_INCLUDE_DIRS ${SDL_MIXER_ROOT}/include/SDL2)
if(PLAT_MSVC)
    set(SDL_MIXER_LIBRARIES "${SDL_MIXER_ROOT}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}SDL2_mixer-static${CMAKE_STATIC_LIBRARY_SUFFIX}")
else()
    set(SDL_MIXER_LIBRARIES "${SDL_MIXER_ROOT}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}SDL2_mixer${CMAKE_STATIC_LIBRARY_SUFFIX}")
endif()
# TODO: Not sure why SDL_mixer doesn't do link these into SDL_mixer.a?

if(PLAT_MSVC)
    set(SDL_MIXER_DEPS  "${SDL_MIXER_ROOT}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}vorbisfile${CMAKE_STATIC_LIBRARY_SUFFIX}"
                        "${SDL_MIXER_ROOT}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}vorbis${CMAKE_STATIC_LIBRARY_SUFFIX}"
                        "${SDL_MIXER_ROOT}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}ogg${CMAKE_STATIC_LIBRARY_SUFFIX}"
                        "${SDL_MIXER_ROOT}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}opusfile${CMAKE_STATIC_LIBRARY_SUFFIX}"
                        "${SDL_MIXER_ROOT}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}opus${CMAKE_STATIC_LIBRARY_SUFFIX}"
    )
else()
    set(SDL_MIXER_DEPS  SDL::SDL
                        "${SDL_MIXER_ROOT}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}vorbisfile${CMAKE_STATIC_LIBRARY_SUFFIX}"
                        "${SDL_MIXER_ROOT}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}vorbis${CMAKE_STATIC_LIBRARY_SUFFIX}"
                        "${SDL_MIXER_ROOT}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}ogg${CMAKE_STATIC_LIBRARY_SUFFIX}"
                        "${SDL_MIXER_ROOT}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}opusfile${CMAKE_STATIC_LIBRARY_SUFFIX}"
                        "${SDL_MIXER_ROOT}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}opus${CMAKE_STATIC_LIBRARY_SUFFIX}"
    )
endif()

if(PLAT_MSVC)
    set(SDL_MIXER_PATCH_COMMAND git submodule update --init)
else()
    set(SDL_MIXER_PATCH_COMMAND cd ${CMAKE_SOURCE_DIR}/lib/SDL_mixer/external/ogg && git apply ${PROJECT_SOURCE_DIR}/lib/ogg_fix.patch && cd ${CMAKE_SOURCE_DIR}/lib/SDL_mixer && chmod +x ${CMAKE_SOURCE_DIR}/lib/SDL_mixer/external/download.sh && ${CMAKE_SOURCE_DIR}/lib/SDL_mixer/external/download.sh || true)
endif()

ExternalProject_Add(
    SDL_mixer
    SOURCE_DIR          ${CMAKE_SOURCE_DIR}/lib/SDL_mixer
    BINARY_DIR          ${SDL_MIXER_ROOT}
    INSTALL_DIR         ${SDL_MIXER_ROOT}
    UPDATE_DISCONNECTED TRUE
    PATCH_COMMAND       ${SDL_MIXER_PATCH_COMMAND}
    CMAKE_ARGS          --toolchain ${CMAKE_TOOLCHAIN_FILE}
                        --install-prefix ${SDL_MIXER_ROOT}
                        -DCMAKE_OSX_ARCHITECTURES=${CMAKE_OSX_ARCHITECTURES}
                        -DCMAKE_C_FLAGS:STRING=${SDL_MIXER_C_FLAGS}
                        -DCMAKE_CXX_FLAGS:STRING=${SDL_MIXER_CXX_FLAGS}
                        -DCMAKE_BUILD_TYPE:STRING=Release
                        -DBUILD_SHARED_LIBS:BOOL=FALSE
                        -DSDL2MIXER_MOD:BOOL=FALSE
                        -DSDL2MIXER_CMD:BOOL=FALSE
                        -DSDL2MIXER_MIDI:BOOL=FALSE
                        -DSDL2MIXER_DEPS_SHARED:BOOL=FALSE
                        -DSDL2MIXER_SAMPLES:BOOL=FALSE
                        -DSDL2MIXER_VENDORED:BOOL=TRUE
                        -DSDL2MIXER_FLAC:BOOL=FALSE
                        -DSDL2MIXER_OGG:BOOL=TRUE
                        -DSDL2MIXER_OPUS:BOOL=TRUE
                        -DSDL2MIXER_VORBIS:STRING=VORBISFILE
                        -DSDL2MIXER_VORBIS_VORBISFILE_SHARED:BOOL=FALSE
                        -DSDL2MIXER_OPUS_SHARED:BOOL=FALSE
                        -DSDL2MIXER_WAVPACK:BOOL=FALSE
                        -DCMAKE_POLICY_VERSION_MINIMUM=3.5
                        
    CMAKE_CACHE_ARGS
                        -DSDL2_DIR:STRING=${SDL_ROOT}/../
                        -DSDL_DIR:STRING=${SDL_ROOT}/../
                        -DSDL_INCLUDE_DIR:STRING=${SDL2_INCLUDE_DIR}
                        -DSDL2_INCLUDE_DIR:STRING=${SDL2_INCLUDE_DIR}
                        -DSDL2_LIBRARY:STRING=${SDL_LIBRARIES}
                        -DSDL2_VERSION:STRING=${SDL_VERSION}

    DEPENDS             SDL::SDL
    BUILD_BYPRODUCTS    ${SDL_MIXER_LIBRARIES} ${SDL_MIXER_DEPS}
)

set(SDL_MIXER_VERSION 2.6.3)
string(REGEX MATCH "^[0-9]+" SDL_MIXER_VERSION_MAJOR ${SDL_MIXER_VERSION})
string(REGEX REPLACE "^[0-9]+\\.([0-9]+).*" "\\1" SDL_MIXER_VERSION_MINOR ${SDL_MIXER_VERSION})
string(REGEX REPLACE "^[0-9]+\\.[0-9]+\\.([0-9]+).*" "\\1" SDL_MIXER_VERSION_PATCH ${SDL_MIXER_VERSION})
message(SDL_MIXER_VERSION_MAJOR\ ==\ ${SDL_MIXER_VERSION_MAJOR})
message(SDL_MIXER_VERSION_MINOR\ ==\ ${SDL_MIXER_VERSION_MINOR})
message(SDL_MIXER_VERSION_PATCH\ ==\ ${SDL_MIXER_VERSION_PATCH})
# *Replicate* SDL target
if(NOT TARGET SDL::Mixer)
    add_library(SDL::Mixer STATIC IMPORTED)
endif()
add_dependencies(SDL::Mixer SDL_mixer)
file(MAKE_DIRECTORY ${SDL_MIXER_INCLUDE_DIRS})
set_target_properties(
    SDL::Mixer PROPERTIES
    IMPORTED_LOCATION ${SDL_MIXER_LIBRARIES}
    IMPORTED_IMPLIB ${SDL_MIXER_LIBRARIES}
)
target_include_directories(SDL::Mixer INTERFACE ${SDL_MIXER_INCLUDE_DIRS})
target_link_directories(SDL::Mixer INTERFACE ${SDL_MIXER_ROOT}/lib)
